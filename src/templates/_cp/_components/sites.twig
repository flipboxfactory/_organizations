{% macro uriSettings(model, allowEnabling) %}
    {% import "_includes/forms" as forms %}
    {% set siteRows = [] %}
    {% set siteErrors = model.getErrors('siteSettings') %}

    {% for site in craft.app.sites.getAllSites() %}
        {% set siteSettings = craft.organizations.settings.isSiteEnabled(site.id) ? (model.getSiteSettings[site.id] ?? null) : null %}
        {% if siteSettings %}
            {% for attribute, errors in siteSettings.getErrors() %}
                {% set siteErrors = siteErrors|merge(errors) %}
            {% endfor %}
        {% endif %}
        {% set siteRows = siteRows|merge({
            (site.handle): {
            heading: site.name|t('site'),
            enabled: include('_includes/forms/lightswitch', {
                name: 'siteSettings['~site.handle~'][enabled]',
                on: siteSettings ?? false,
                value: site.id,
                small: true,
                disabled: not craft.organizations.settings.isSiteEnabled(site.id) and not allowEnabling
            }),
            uriFormat: {
                value: siteSettings.uriFormat ?? null,
                hasErrors: siteSettings ? siteSettings.hasErrors('uriFormat')
            },
            template: {
                value: siteSettings.template ?? null,
                hasErrors: siteSettings ? siteSettings.hasErrors('template'),
            },
            enabledByDefault: siteSettings.enabledByDefault ?? true,
        }
            }) %}
    {% endfor %}

    {{ forms.editableTableField({
        label: "Site Settings"|t('app'),
        instructions: "Configure the organization type's site-specific settings."|t('app'),
        id: 'siteSettings',
        name: 'siteSettings',
        cols: {
        heading: {
            type: 'heading',
            heading: "Site"|t('app'),
            class: 'thin'
        },
        enabled: {
        type: 'heading',
        class: 'thin'~(not craft.app.getIsMultiSite() ? ' hidden' : '')
    },
    uriFormat: {
        type: 'singleline',
        heading: "Entry URI Format"|t('app'),
        info: "What organization URIs should look like for the site. Leave blank if organizations don’t have URLs."|t('app'),
        placeholder: "Leave blank if organizations don’t have URLs"|t('organizations'),
        code: true,
        class: 'type-channel type-structure'
    },
    template: {
        type: 'singleline',
        heading: "Template"|t('app'),
        info: "Which template should be loaded when an organization’s URL is requested."|t('organizations'),
        code: true
    },
    enabledByDefault: {
    type: 'lightswitch',
    heading: "Default Status"|t('app'),
    class: 'thin'~(not allowEnabling ? ' hidden' : '')
    }
    },
    rows: siteRows,
    staticRows: true,
    errors: siteErrors|unique
    }) }}

    {% js %}
        {#<script>#}
        var $siteRows = $('#siteSettings').children('tbody').children(),
        $lightswitches = $siteRows.children('th:nth-child(2)').children('.lightswitch');

        function updateSites() {
        $lightswitches.each(function () {
        if ($(this).data('lightswitch').on) {
        $(this).parent().nextAll('td').removeClass('disabled').find('textarea,div.lightswitch,input').attr('tabindex', '0');
        } else {
        $(this).parent().nextAll('td').addClass('disabled').find('textarea,div.lightswitch,input').attr('tabindex', '-1');
        }
        });
        }

        Garnish.$doc.ready(function () {
        updateSites();
        });

        $lightswitches.on('change', updateSites);
        {#</script>#}
    {% endjs %}

    {% if not allowEnabling and not model.id %}
        {% js %}
            new Craft.HandleGenerator('#name', '#handle');
            {% for site in craft.app.sites.getAllSites() %}
                new Craft.UriFormatGenerator('#name', '#siteSettings tr[data-id="{{ site.handle }}"] textarea[name$="[uriFormat]"]', { suffix: '/{handle}' });
                new Craft.UriFormatGenerator('#name', '#siteSettings tr[data-id="{{ site.handle }}"] textarea[name$="[template]"]', { suffix: '/_organization' });
            {% endfor %}
        {% endjs %}
    {% endif %}
{% endmacro %}